package ms3.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the DailyLog service. Represents a row in the &quot;train_DailyLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ms3.service.model.impl.DailyLogModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ms3.service.model.impl.DailyLogImpl}.
 * </p>
 *
 * @author jackt
 * @see DailyLog
 * @see ms3.service.model.impl.DailyLogImpl
 * @see ms3.service.model.impl.DailyLogModelImpl
 * @generated
 */
public interface DailyLogModel extends BaseModel<DailyLog> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a daily log model instance should use the {@link DailyLog} interface instead.
     */

    /**
     * Returns the primary key of this daily log.
     *
     * @return the primary key of this daily log
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this daily log.
     *
     * @param primaryKey the primary key of this daily log
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the daily log ID of this daily log.
     *
     * @return the daily log ID of this daily log
     */
    public long getDailyLogId();

    /**
     * Sets the daily log ID of this daily log.
     *
     * @param dailyLogId the daily log ID of this daily log
     */
    public void setDailyLogId(long dailyLogId);

    /**
     * Returns the assignment_id of this daily log.
     *
     * @return the assignment_id of this daily log
     */
    public long getAssignment_id();

    /**
     * Sets the assignment_id of this daily log.
     *
     * @param assignment_id the assignment_id of this daily log
     */
    public void setAssignment_id(long assignment_id);

    /**
     * Returns the date of this daily log.
     *
     * @return the date of this daily log
     */
    @AutoEscape
    public String getDate();

    /**
     * Sets the date of this daily log.
     *
     * @param date the date of this daily log
     */
    public void setDate(String date);

    /**
     * Returns the accomplishments of this daily log.
     *
     * @return the accomplishments of this daily log
     */
    @AutoEscape
    public String getAccomplishments();

    /**
     * Sets the accomplishments of this daily log.
     *
     * @param accomplishments the accomplishments of this daily log
     */
    public void setAccomplishments(String accomplishments);

    /**
     * Returns the roadblocks of this daily log.
     *
     * @return the roadblocks of this daily log
     */
    @AutoEscape
    public String getRoadblocks();

    /**
     * Sets the roadblocks of this daily log.
     *
     * @param roadblocks the roadblocks of this daily log
     */
    public void setRoadblocks(String roadblocks);

    /**
     * Returns the plan of this daily log.
     *
     * @return the plan of this daily log
     */
    @AutoEscape
    public String getPlan();

    /**
     * Sets the plan of this daily log.
     *
     * @param plan the plan of this daily log
     */
    public void setPlan(String plan);

    /**
     * Returns the notes of this daily log.
     *
     * @return the notes of this daily log
     */
    @AutoEscape
    public String getNotes();

    /**
     * Sets the notes of this daily log.
     *
     * @param notes the notes of this daily log
     */
    public void setNotes(String notes);

    /**
     * Returns the hours of this daily log.
     *
     * @return the hours of this daily log
     */
    public double getHours();

    /**
     * Sets the hours of this daily log.
     *
     * @param hours the hours of this daily log
     */
    public void setHours(double hours);

    /**
     * Returns the section of this daily log.
     *
     * @return the section of this daily log
     */
    @AutoEscape
    public String getSection();

    /**
     * Sets the section of this daily log.
     *
     * @param section the section of this daily log
     */
    public void setSection(String section);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ms3.service.model.DailyLog dailyLog);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ms3.service.model.DailyLog> toCacheModel();

    @Override
    public ms3.service.model.DailyLog toEscapedModel();

    @Override
    public ms3.service.model.DailyLog toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
